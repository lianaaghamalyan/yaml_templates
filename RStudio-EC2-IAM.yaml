AWSTemplateFormatVersion: 2010-09-09

Description: Sets up an RStudio on Amazon EC2 Instance

Parameters:
  InstanceType:
    Type: String
    Description: Instance type for RStudio. Default is t2.micro.
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - g2.2xlarge
      - g2.8xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3.16xlarge
    ConstraintDescription: Valid instance type in the t2, m4, c4, r4, g2, p2, and g3 families
    Default: t2.micro
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: Amazon Linux Image ID. 
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC this server will reside in
  MyIp:
    Type: String
    Description: Provide your Public IP (1.2.3.4/32) or (0.0.0.0/0)
    Default: 0.0.0.0/0
  InitialUser:
    Type: String
    Description: User Name for RStudio
    Default: rstudio
  InitialPassword:
    Type: String
    Description: Password for RStudio. Please keep in your records as this will not be echoed in the CloudFormation Console
    NoEcho: True
    Default: Rstudio@123
  KeyPair:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Amazon EC2 Key Pair
  SubnetId:
    Type: "AWS::EC2::Subnet::Id"
    Description: Subnet ID your instance will launch in. Should be Internet accessible for the purposes of this demo.
Resources:
  RStatsInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: 
       - !Ref RStatsRole
  RStatsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
              - "arn:aws:iam::aws:policy/AmazonAthenaFullAccess"
              - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
              - "arn:aws:iam::aws:policy/AmazonTimestreamFullAccess"  
  RstatsEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RStudio and Shiny Security Group
      VpcId: !Ref VpcId
 
  SecurityGroupIngressMySSH:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: RstatsEC2SecurityGroup
    Properties:
        Description: "Allow SSH connections from MyIp"
        GroupId: !Ref RstatsEC2SecurityGroup
        CidrIp: !Sub "${MyIp}"
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22

  SecurityGroupIngressRStudio:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: RstatsEC2SecurityGroup
    Properties:
        Description: "Allow RStudio connections from MyIp"
        GroupId: !Ref RstatsEC2SecurityGroup
        CidrIp: !Sub "${MyIp}"
        IpProtocol: tcp
        FromPort: 8787
        ToPort: 8787
        
  SecurityGroupIngressShinny:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: RstatsEC2SecurityGroup
    Properties:
        Description: "Allow Shinny connections from MyIp"
        GroupId: !Ref RstatsEC2SecurityGroup
        CidrIp: !Sub "${MyIp}"
        IpProtocol: tcp
        FromPort: 3838
        ToPort: 3838  

  SecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    DependsOn: RstatsEC2SecurityGroup
    Properties:
        Description: "Allow outbound connections to mentioned IP"
        GroupId: !Ref RstatsEC2SecurityGroup
        CidrIp: !Sub "${MyIp}"  
        IpProtocol: -1
        FromPort: -1
        ToPort: -1
  RStatsNetworkInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref SubnetId
      Description: Interface for RStudio Connection
      GroupSet:
      - !Ref RstatsEC2SecurityGroup
      SourceDestCheck: true
  RStatsEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPair
      IamInstanceProfile: !Ref RStatsInstanceProfile
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref RStatsNetworkInterface
          DeviceIndex: 0
      Tags:
      - Key: Name
        Value: RStudio
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum install -y docker
          systemctl enable docker --now
          mkdir -p /rstudio/workspace 
          chown -R 1000:1000 /rstudio
          docker run -v /rstudio/workspace:/home/rstudio/workspace -d -e PASSWORD=${InitialPassword} -p 8787:8787 rocker/rstudio
Outputs:
  RStudioURL: 
    Description: HTTP Endpoint for RStudio
    Value:  !Join ["", [ "http://", !GetAtt RStatsEC2Instance.PublicDnsName,  ":8787"  ]]
  PublicIp: 
    Value: !GetAtt RStatsEC2Instance.PublicIp